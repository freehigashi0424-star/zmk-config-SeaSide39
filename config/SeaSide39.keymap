#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp E         &kp R             &kp T                                        &kp Y        &kp U  &lt 5 I    &kp O       &lt 6 P
&mt LEFT_CONTROL A  &kp S         &kp D         &kp F             &kp G                                        &kp H        &kp J  &kp K      &kp L       &mt RCTRL MINUS
&mt LEFT_SHIFT Z    &kp X         &kp C         &kp V             &kp B                                        &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt LEFT_SHIFT SLASH
&kp LEFT_CONTROL    &kp LEFT_WIN  &kp LEFT_ALT  &lt 4 LANGUAGE_2  &lt 1 SPACE  &lt 3 LANGUAGE_1      &kp BSPC  &lt 2 ENTER                                &mo 3
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp ESCAPE            &kp F2     &kp UP     &kp F4           &kp P                          &kp LG(LS(S))      &kp EXCLAMATION   &kp CARET             &kp AMPS               &kp EQUAL
&mt LEFT_CONTROL TAB  &kp LEFT   &kp DOWN   &kp RIGHT_ARROW  &kp LC(Z)                      &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS
&kp HOME              &kp RS(C)  &kp LC(C)  &kp LC(V)        &kp LC(Y)                      &kp COLON          &kp PERCENT       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK
&kp END               &trans     &kp LC(A)  &trans           &trans     &trans      &trans  &trans                                                                            &trans
            >;
        };

        NUM {
            bindings = <
&kp F1   &kp F2          &kp F3    &kp F4       &kp F5                          &kp ASTERISK  &kp N7        &kp N8        &kp NUMBER_9  &trans
&kp F6   &kp F7          &kp F8    &kp F9       &kp F10                         &kp SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS
&kp F11  &kp BACKSLASH   &kp HASH  &kp AT_SIGN  &kp DOLLAR                      &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COLON
&trans   &kp KP_NUMLOCK  &trans    &trans       &trans      &trans      &trans  &kp NUMBER_0                                            &kp PERIOD
            >;
        };

        ARROW {
            bindings = <
&kp LG(TAB)           &mkp MB4        &kp UP_ARROW    &mkp MB5         &kp HOME                      &kp LG(TAB)      &kp LC(LG(LEFT_ARROW))      &msc SCRL_UP    &kp RG(RC(RIGHT_ARROW))      &kp LS(LC(LG(D)))
&mt LEFT_CONTROL TAB  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END                       &kp LA(F4)       &mkp MB1                    &msc SCRL_DOWN  &mkp MB2                     &kp RC(RG(F4))
&kp LEFT_SHIFT        &trans          &trans          &trans           &trans                        &kp RC(RA(TAB))  &kp LA(LG(LC(LEFT_ARROW)))  &mkp MCLK       &kp RG(RA(RC(RIGHT_ARROW)))  &kp RA(RC(RG(RIGHT_ARROW)))
&trans                &trans          &trans          &trans           &trans    &trans      &trans  &trans                                                                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&kp ASTERISK   &kp NUMBER_7  &kp NUMBER_8  &kp N9        &kp EQUAL                      &trans  &trans    &trans    &trans    &trans
&kp SLASH      &kt NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS                       &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&kp NUMBER_0   &kt NUMBER_1  &kp NUMBER_2  &kt NUMBER_3  &trans                         &trans  &trans    &trans    &trans    &trans
&kp BACKSPACE  &kp ENTER     &kp PERIOD    &trans        &trans     &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &kp ENTER  &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &kp LS(LG(N5))  &kp LS(LG(N4))      &kp LC(DOWN)  &kp LC(UP_ARROW)                          &trans
            >;
        };

        CONFIG {
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                            &trans       &trans    &kp UP    &trans     &trans
&trans          &trans        &trans        &trans        &trans                            &trans       &kp LEFT  &kt DOWN  &kt RIGHT  &trans
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &bootloader  &trans    &trans    &trans     &trans
&trans          &trans        &trans        &trans        &trans        &trans      &trans  &trans                                      &trans
            >;
        };
    };
};
